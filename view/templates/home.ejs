<?- include('./parts/top', { title : 'Home' }) ?>
<body>
    <?- include('./parts/navigation.ejs', { name : locals.name }) ?>
    <div id='player' style='width: 100%; height: 100;'></div>
    <script>

    /** <Add youtube iframe API script> **/
    let tag = document.createElement('script');
    tag.src = "https://www.youtube.com/iframe_api";
    let firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
    /** </> **/

    // check if a number is in within plus or minus range of the target number
    function is_in_range(num, target, plus_or_minus)
    {
        return num >= target - plus_or_minus && num <= target + plus_or_minus ;
    }

    let player;
    function onYouTubeIframeAPIReady()
    {
        player = new YT.Player
        (
            'player',
            {
                height: window.innerWidth * 0.68 * (9/16),
                width: window.innerWidth * 0.68,
                videoId: '',
                playerVars:
                {
                    autoplay : 1,
                    controls : 0,
                    disablekb : 1,
                    enablejsapi : 1,
                    rel : 0,
                    showinfo : 0,
                    origin : 'http://localhost:9001'

                },
                events:
                {
                    'onReady': onPlayerReady
                }
            }
        );
    }

    let sse;
    let sse_recieved_any_data = false;
    let ran_once = false;
    function onPlayerReady(event)
    {
        if(!ran_once)
        {
            player.stopVideo(); // do not play the hardcoded default video
            sse = new EventSource('/api/0.0.0/main_channel/connect');
            sse.onerror = (e) => console.error('Error -->', e);
            sse.onmessage = handle_sse_connection; // SSE event handler set
            ran_once = true;
            setTimeout(() =>
            {
                if(!sse_recieved_any_data)
                {
                    player.loadVideoById({ 'videoId' : 'XOacA3RYrXk' })
                }
            }, 3000);
        }
    }

    function handle_sse_connection(e)
    {
        let data = JSON.parse(e.data);
        console.log(data);
        sse_recieved_any_data = true;

        if(data.play_at > 0 && player.getVideoData().video_id !== data.video_id)
        {
            player.loadVideoById
            (
                {
                    'videoId' : data.video_id,
                    'startSeconds' : data.play_at
                }
            );

            player.playVideo();
        }

        if
        (
            data.play_at > 0 &&
            (
                player.getPlayerState() === 1 ||
                (
                    player.getVideoData().video_id === data.video_id &&
                    player.getPlayerState() === 0
                )
            )
        )
        {
            // If the current video time user is seeing is not same as 1 seconds
            // of the recieved time user should be seeing, change to recieved time
            // runs only if the video is playing, not stopped or buffering etc

            // - Increase allowed error seconds to prevent skipping/lagging
            // - Decrease allowed error (upto 0) seconds to make syncing more
            // precise but it may increase skipping/lagging
            if(!is_in_range(player.getCurrentTime(), data.play_at, 1.3))
                player.seekTo(data.play_at);

            // Change page title to indicate which video is currently playing
            if(document.title !== 'NOW PLAYING: ' + player.getVideoData().title)
                document.title = 'NOW PLAYING: ' + player.getVideoData().title;
        }
        else if(player.getPlayerState() === 2)
        {
            document.title = 'PAUSED';
        }
        else if(player.getPlayerState() === 3)
        {
            document.title = 'YOUTUBE BUFFERING / SERVER SYNCING';
        }
        else
        {
            document.title = 'Public Room Prototype';
        }
    }
    </script>
    <?- include('./parts/main_ch_submission.ejs', { name : locals.name }) ?>
</body>
</html>